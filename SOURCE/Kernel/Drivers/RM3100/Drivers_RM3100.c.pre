#include "Drivers_RM3100.h"
#include "BSP_I2C.h"
#include "Sleep.h"

/*******************************************************************************
* Function Name :Drivers_RM3100PowerOn(RM3100_GPIO_TypeDef RM3100_GPIO)
* Description   :打开RM3100电源
* Author        : YJD
* Input			: RM3100_GPIO_TypeDef RM3100_GPIO
* Output        :
* Other         :
* Date          :2018.06.27
*******************************************************************************/
void Drivers_RM3100PowerOn(RM3100_GPIO_TypeDef RM3100_GPIO)
{
	RM3100_POWER_ON(RM3100_GPIO);
}
/*******************************************************************************
* Function Name :void Drivers_RM3100PowerOff(RM3100_GPIO_TypeDef RM3100_GPIO)
* Description   :关闭RM3100电源
* Author        : YJD
* Input			: RM3100_GPIO_TypeDef RM3100_GPIO
* Output        :
* Other         :
* Date          :2018.06.27
*******************************************************************************/
void Drivers_RM3100PowerOff(RM3100_GPIO_TypeDef RM3100_GPIO)
{
	RM3100_POWER_OFF(RM3100_GPIO);
}
/*******************************************************************************
* Function Name :void Drivers_RM3100I2CEnable(RM3100_GPIO_TypeDef RM3100_GPIO)
* Description   :RM3100 I2C使能
* Author        : YJD
* Input			: RM3100_GPIO_TypeDef RM3100_GPIO
* Output        :
* Other         :
* Date          :2018.06.27
*******************************************************************************/
void Drivers_RM3100I2CEnable(RM3100_GPIO_TypeDef RM3100_GPIO)
{
	RM3100_I2C_EN_ON(RM3100_GPIO); 
}

/*******************************************************************************
* Function Name :void Drivers_RM3100I2CDisable(RM3100_GPIO_TypeDef RM3100_GPIO)
* Description   :RM3100 I2C禁止
* Author        : YJD
* Input			: RM3100_GPIO_TypeDef RM3100_GPIO
* Output        :
* Other         :
* Date          :2018.06.27
*******************************************************************************/
void Drivers_RM3100I2CDisable(RM3100_GPIO_TypeDef RM3100_GPIO)
{
	RM3100_I2C_EN_OFF(RM3100_GPIO); 
}

/*******************************************************************************
* Function Name :void Drives_RM3100Sleep(RM3100_GPIO_TypeDef RM3100_GPIO)
* Description   :RM3100 休眠
* Author        : YJD
* Input			: RM3100_GPIO_TypeDef RM3100_GPIO
* Output        :
* Other         :
* Date          :2018.06.27
*******************************************************************************/
void Drives_RM3100DeepSleep(RM3100_GPIO_TypeDef RM3100_GPIO)
{
    Drivers_RM3100PowerOff(RM3100_GPIO);
	Drivers_RM3100I2CDisable(RM3100_GPIO);
	RM3100_I2C_SDA_SCL_OFF(RM3100_GPIO.gpioI2cStructer); 
}
/*******************************************************************************
* Function Name :void Drivers_RM3100WakeUp(RM3100_GPIO_TypeDef RM3100_GPIO)
* Description   :RM3100 唤醒
* Author        : YJD
* Input			: RM3100_GPIO_TypeDef RM3100_GPIO
* Output        :
* Other         :
* Date          :2018.06.27
*******************************************************************************/
void Drivers_RM3100WakeUp(RM3100_GPIO_TypeDef RM3100_GPIO)
{
	Drivers_RM3100PowerOn(RM3100_GPIO);
	Drivers_RM3100I2CEnable(RM3100_GPIO);
	RM3100_I2C_SDA_SCL_ON(RM3100_GPIO.gpioI2cStructer); 
}
/*******************************************************************************
* Function Name :void Drivers_RM3100SetMeaureMode(int mode)
* Description   :RM3100 设置测量模式
* Author        : YJD
* Input			: mode  需要设置的模式1-n
* Output        :
* Other         :
* Date          :2018.06.29
*******************************************************************************/
void Drivers_RM3100SetMeaureMode(uint8_t mode)
{
	uint8_t m_writeData;
	switch(mode)
	{
		case 1:	
			m_writeData = 0x70;
			BSP_I2cWriteBytes(0, &m_writeData)
	}
}


/*******************************************************************************
* Function Name :void Drivers_Rm3100Init(void)
* Description   :Rm3100硬件初始化
* Author        : YJD
* Input			: 
* Output        :
* Other         :
* Date          :2018.05.08
*******************************************************************************/
void Drivers_Rm3100Init(void)
{
    disableInterrupts();
	
    enableInterrupts();
}
/*******************************************************************************
* Function Name :Drivers_ReadI2cData(uint8_t* rBuf, uint8_t regAddr, uint8_t readLen)
* Description   :通过I2C结构读Rm3100数据
* Author        : YJD
* Input			: rBuf: 读出数据保存到的buf regAddr: 要读寄存器的地址 readLen:要读数据的长度
* Output        :
* Other         :
* Date          :2018.05.08
*******************************************************************************/
/*void Drivers_ReadI2cData(uint8_t* rBuf, uint8_t regAddr, uint8_t readLen)
{
    GPIO_I2C_TypeDef gpioI2cStructer;
    RM3100_POWER_ON;
    DelayUs(100);                     //上电延时等待R3100准备，小于30us读出数据错误，典型值200us
    gpioI2cStructer.GPIO_SCL_BASE = (GPIO_TypeDef*)GPIOE;
    gpioI2cStructer.GPIO_SCL_PIN = GPIO_Pin_1;
    gpioI2cStructer.GPIO_SDA_BASE = (GPIO_TypeDef*)GPIOE;
    gpioI2cStructer.GPIO_SDA_PIN = GPIO_Pin_0;
    gpioI2cStructer.SLAVE_ADDRESS = 0x40;
    BSP_I2cInit(gpioI2cStructer);
    BSP_I2cWrite(0, 0x70, gpioI2cStructer);       //设置为单一测量模式
    //下面等待地磁中断来
    nop();
    ///中断等待，时间与查询相等，功耗约为查询的一半//
    R3100_IRQ_SET;//开地磁芯片中断输入
    enableInterrupts();                          //开中断,关中断动作在睡眠被唤醒后执行
    RtcSleep(30);                                //rtc睡眠时间,15ms
    NopSleep();                                  //进入睡眠
    R3100_IRQ_CLR;                               //关地磁芯片中断输入
    BSP_I2cReadBytes(regAddr, gpioI2cStructer, (uint8_t*)rBuf, readLen);
    nop(); 
    nop();

}*/
/*******************************************************************************
* Function Name :void Drivers_GetRm3100Data(PSensor3100         sensor3100)
* Description   :封装读取到的Rm3100数据到sensor3100结构体
* Author        : YJD
* Input			: sensor3100: 地磁数据结构体指针
* Output        :
* Other         :
* Date          :2018.05.08
*******************************************************************************/
/*void Drivers_GetRm3100Data(PSensor3100           pSensor3100)
{
    uint8_t mTempBuf[9];
    long mReading = 0;
    Drivers_ReadI2cData(&mTempBuf[0], 0x24, 9);     //采集地磁传感器数据
    RM3100_POWER_OFF
    mReading  = *mTempBuf << 8;
    mReading |= *(mTempBuf + 1);
    mReading  = mReading << 8;
    mReading |= *(mTempBuf + 2);
    pSensor3100->EMData_x = (int16_t)mReading /
                           MAGNETIC_FACTOR;

    mReading  = *(mTempBuf + 3) << 8;
    mReading |= *(mTempBuf + 4);
    mReading  = mReading << 8;
    mReading |= *(mTempBuf + 5);
    pSensor3100->EMData_y = (int16_t)mReading /
                           MAGNETIC_FACTOR;

    mReading  = *(mTempBuf + 6) << 8;
    mReading |= *(mTempBuf + 7);
    mReading  = mReading << 8;
    mReading |= *(mTempBuf + 8);
    pSensor3100->EMData_z = (int16_t)mReading /
                           MAGNETIC_FACTOR;
    nop();
}*/